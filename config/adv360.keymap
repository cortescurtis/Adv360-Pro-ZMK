/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <350>;
            quick_tap_ms = <175>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <52 53 65 66 67 68 69 70 35 36 37 38 70 71 7 8 9 10 11 12 13 21 22 23 24 25 26 27 37 38 39 40 41 42 43 44 45 54 55 56 57 58 59 69 70 71 72 73 74 75>;
            hold-trigger-on-release;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <350>;
            quick_tap_ms = <175>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <35 36 37 38 52 53 65 66 67 68 69 70 0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 46 47 48 49 50 51 52 60 61 62 63 64 65 66>;
            hold-trigger-on-release;
        };

        hmt: hmt {
            compatible = "zmk,behavior-hold-tap";
            label = "HMT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            retro-tap;
            flavor = "balanced";
            require-prior-idle-ms = <175>;
        };

        shift_back: shift_back {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_BACK";
            #binding-cells = <0>;
            bindings = <&mt LSHFT BACKSPACE>, <&kp BACKSPACE>;

            tapping-term-ms = <175>;
        };

        shift_space: shift_space {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_SPACE";
            #binding-cells = <0>;
            tapping-term-ms = <175>;
            bindings = <&mt RSHFT SPACE>, <&kp SPACE>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Z_Comb {
            bindings = <&kp Z>;
            key-positions = <16 17>;
        };

        Q_Comb {
            bindings = <&kp Q>;
            key-positions = <24 25>;
        };

        RetEngrammer {
            bindings = <&tog 0>;
            key-positions = <34 39>;
            layers = <0 1 2 3 4>;
        };

        ToGaming {
            bindings = <&tog 4>;
            key-positions = <20 21>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Engrammer {
            bindings = <
&kp EQUAL      &kp N1               &kp N2           &kp N3           &kp N4             &kp N5            &caps_word                                                                                           &lt 3 CAPS    &kp N6     &kp N7              &kp N8            &kp N9           &kp N0                &kp MINUS
&kp GRAVE      &kp B                &kp Y            &kp O            &kp U              &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES                                                                                    &kp COLON     &kp SEMI   &kp L               &kp D             &kp W            &kp V                 &kp AMPS
&kp HASH       &hml LEFT_CONTROL C  &hml LEFT_ALT I  &hml LEFT_GUI E  &hml LEFT_SHIFT A  &kp COMMA         &kp LT             &mt LCTRL ESC  &kp LCMD               &sk RCMD             &mt RIGHT_CONTROL TAB  &kp GT        &kp DOT    &hmr RIGHT_SHIFT H  &hmr RIGHT_GUI T  &hmr LEFT_ALT S  &hmr RIGHT_CONTROL N  &kp EXCL
&kp AT_SIGN    &kp G                &kp X            &kp J            &kp K              &kp MINUS                                           &mt LEFT_ALT HOME      &mt RIGHT_ALT PG_UP                                       &kp SLASH  &kp R               &kp M             &kp F            &kp P                 &kp NON_US_BACKSLASH
&kp BACKSPACE  &kp LPAR             &kp LBKT         &kp RBKT         &kp RPAR                             &shift_back        &lt 1 DELETE   &lt 3 END              &lt 3 PG_DN          &lt 2 RET              &shift_space             &kp LEFT            &kp DOWN          &kp UP           &kp RIGHT             &kp SPACE
            >;
        };

        Keypad {
            bindings = <
&kp F1  &kp F2     &kp F3        &kp F4            &kp F5              &kp F6         &none                                                                              &none                        &kp F7      &kp F8                  &kp F9                 &kp F10                    &kp F11             &kp F12
&none   &none      &hmt RALT N7  &kp N8            &kp N9              &none          &trans                                                                             &kp LEFT_PARENTHESIS         &kp RPAR    &kp KP_N7               &kp KP_N8              &hmt RALT KP_NUMBER_9      &kp KP_MINUS        &kp KP_DIVIDE
&none   &kp LCTRL  &hmt LALT N4  &hmt LEFT_GUI N5  &hmt LEFT_SHIFT N5  &kp BACKSPACE  &trans    &kp LCTRL  &kp LALT      &kp LGUI             &mt RIGHT_CONTROL COMMA    &kp LT                       &kp GT      &hmt RSHFT KP_NUMBER_4  &hmt RGUI KP_NUMBER_5  &hmt LEFT_ALT KP_NUMBER_6  &hmt RCTRL KP_PLUS  &kp KP_MULTIPLY
&none   &none      &kp N1        &kp N2            &kp N3              &kp DEL                             &kp HOME      &mt LEFT_ALT PG_UP                                                           &kp DOLLAR  &kp KP_N1               &kp KP_N2              &kp KP_N3                  &kp KP_ENTER        &kp PERCENT
&none   &none      &kp EQUAL     &kp N0            &kp DOT                            &kp BSPC  &trans     &kp END       &mt RIGHT_ALT PG_DN  &mt LS(LA(LG(LCTRL))) DOT  &mt RIGHT_SHIFT KP_NUMBER_0              &kp KP_EQUAL            &kp KP_NUMBER_0        &kp KP_DOT                 &kp KP_ENTER        &kp KP_NUMLOCK
            >;
        };

        Symbols {
            bindings = <
&kp PLUS         &kp GRAVE       &kp LPAR          &kp RPAR           &kp SEMI          &kp COMMA     &none                                                     &none   &none          &none           &none         &kp RALT   &none      &none
&kp EXCLAMATION  &kp LEFT_BRACE  &kp SQT           &kp DOUBLE_QUOTES  &kp RIGHT_BRACE   &kp QUESTION  &none                                                     &trans  &none          &kp LEFT_SHIFT  &kp LEFT_GUI  &kp LALT   &kp LCTRL  &none
&kp HASH         &kp CARET       &kp EQUAL         &kp UNDERSCORE     &kp DOLLAR        &kp ASTERISK  &none      &kp BACKSLASH  &kp ASTERISK      &none  &none  &trans  &kp BACKSPACE  &kp BACKSPACE   &kp TAB       &kp SPACE  &kp RET    &none
&kp AT_SIGN      &kp LESS_THAN   &kp PIPE          &kp MINUS          &kp GREATER_THAN  &kp SLASH                               &kp PERIOD        &none                 &kp DEL        &kp DEL         &kp LS(TAB)   &none      &none      &none
&kp TILDE        &kp AMPERSAND   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PLUS                        &kp COLON  &kp SEMICOLON  &kp PERCENT       &none  &none  &trans                 &none           &none         &none      &none      &none
            >;
        };

        System {
            bindings = <
&kp F1  &kp F2        &kp F3        &kp F4        &kp F5        &kp F6        &none                                                                     &trans           &kp F7  &kp F8      &kp F9      &kp F10  &kp F11  &kp F12
&none   &none         &none         &none         &none         &none         &bootloader                                                               &bootloader      &none   &none       &none       &none    &none    &none
&none   &none         &none         &none         &none         &none         &none        &bt BT_CLR  &bt BT_CLR_ALL      &none  &rgb_ug RGB_MEFS_CMD  &none            &none   &none       &none       &none    &none    &none
&none   &none         &none         &none         &none         &bt BT_SEL 4                           &none               &none                                         &none   &none       &none       &none    &none    &none
&none   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                &bt BT_PRV   &bt BT_NXT  &none               &none  &bl BL_TOG            &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC  &none    &none    &none
            >;
        };

        Gaming {
            bindings = <
&kp N6  &kp N1     &kp N2  &kp N3  &kp N4  &kp N5  &kp MINUS                                                               &kp EQUAL  &kp N6  &kp N7    &kp N8     &kp N9   &kp N0     &kp BSPC
&kp N7  &kp TAB    &kp Q   &kp W   &kp E   &kp R   &kp T                                                                   &kp HOME   &kp Y   &kp U     &kp I      &kp O    &kp P      &kp BSLH
&kp N8  &kp LCTRL  &kp A   &kp S   &kp D   &kp F   &kp G      &kp ESC    &kp LGUI               &kp RGUI       &kp GRAVE   &kp END    &kp H   &kp J     &kp K      &kp L    &kp SEMI   &kp RCTRL
&kp N9  &kp LSHFT  &kp Z   &kp X   &kp C   &kp V                         &kp LEFT_BRACKET       &kp PG_UP                             &kp N   &kp M     &kp COMMA  &kp DOT  &kp FSLH   &kp RSHFT
&kp N0  &kp LALT   &kp J   &kp M   &kp B           &kp SPACE  &kp ENTER  &kp RIGHT_BRACKET      &kp PAGE_DOWN  &kp DELETE  &kp BSPC           &kp LEFT  &kp DOWN   &kp UP   &kp RIGHT  &kp RALT
            >;
        };
    };
};
